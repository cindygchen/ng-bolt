(function () {
  'use strict';

  /**
   * @name bltDocs
   * 
   * @description
   * This is the root module of the ngBoltJS project website featuring a project overview,
   * guides, and documentation.
   * 
   * @requires ngRoute
   */
  angular.module('bltDocs', [
    'ngRoute',
    'main',
    'home',
    'guides',
    'api',
    'ngBolt'
  ])
    .config(config)
    .run(run);

  function config($locationProvider, $routeProvider, API_DATA, GUIDES_DATA, HOME_DATA, APP_API_DATA) {

    // Set HTML5 Mode
    $locationProvider.html5Mode(false);

    // Documentation index page, doesn't get automatically generated by dgeni'
    // TODO: programmatically add api index page
    $routeProvider.when('/api', {
      controller: 'ApiController',
      controllerAs: 'ctrl',
      templateUrl: 'partials/api.html'
    });

    // Looping through all of our DOCS pages
    // and dynamically creating new routes based
    // on the data generated by Dgeni
    angular.forEach(API_DATA, function (parent) {
      $routeProvider.when(normalizePath(parent.path), {
        controller: 'ApiController',
        controllerAs: 'ctrl',
        templateUrl: parent.template
      });

      // In the case of API, we have multiple modules and each
      // of them have children, so we are doing the same thing
      // here but for the child states
      angular.forEach(parent.docs, function (doc) {
        $routeProvider.when(normalizePath(doc.path), {
          controller: 'ApiController',
          controllerAs: 'ctrl',
          templateUrl: doc.template
        });
      });
    });

    // Add App api data if there is any
    if (APP_API_DATA.length > 0) {

      $routeProvider.when('/app', {
        controller: 'AppApiController',
        controllerAs: 'ctrl',
        templateUrl: 'partials/app.html'
      });

      // Looping through all of our DOCS pages
      // and dynamically creating new routes based
      // on the data generated by Dgeni
      angular.forEach(APP_API_DATA, function (parent) {
        $routeProvider.when(normalizePath(parent.path), {
          controller: 'AppApiController',
          controllerAs: 'ctrl',
          templateUrl: parent.template
        });

        // In the case of API, we have multiple modules and each
        // of them have children, so we are doing the same thing
        // here but for the child states
        angular.forEach(parent.docs, function (doc) {
          $routeProvider.when(normalizePath(doc.path), {
            controller: 'AppApiController',
            controllerAs: 'ctrl',
            templateUrl: doc.template
          });
        });
      });
    }

    // Loop through all Guide data to set up routes. Guides 
    // should be a flat list of files, so no need to loop twice.
    angular.forEach(GUIDES_DATA, function (parent) {
      $routeProvider.when(normalizePath(parent.path), {
        controller: 'GuidesController',
        controllerAs: 'ctrl',
        templateUrl: parent.template
      });
    });

    // Loop through all Home pages to set up routes. Home pages
    // should be a flat list of files, so no need to loop twice.
    angular.forEach(HOME_DATA, function(page) {
      $routeProvider.when(normalizePath(page.path), {
        controller: 'HomeController',
        templateUrl: page.template
      })
    })

    // Default to '/api' if location not found
    if (APP_API_DATA.length > 0) {
      $routeProvider.otherwise('/app');
    } else if (API_DATA.length > 0) {
      $routeProvider.otherwise('/api');
    } else {
      $routeProvider.otherwise('/guides');
    }
  }
  config.$inject = ["$locationProvider", "$routeProvider", "API_DATA", "GUIDES_DATA", "HOME_DATA", "APP_API_DATA"];

  function run($rootScope) {
    // Add code highlighing after view content is loaded.
    $rootScope.$on('$viewContentLoaded', highlightCode)
  }
  run.$inject = ['$rootScope'];

  /**
   * @description Get all `code` blocks inside `pre` tags and add code highlighing with highlightJs.
   */
  function highlightCode() {
    var codeBlocks = angular.element(document).find('pre').find('code');
    angular.forEach(codeBlocks, hljs.highlightBlock);
  }

  function normalizePath(path){
    
    //Polyfill that  provides .startsWith functionality in IE 11
    if (!String.prototype.startsWith) {
      String.prototype.startsWith = function(searchString, position) {
      position = position || 0;
      return this.indexOf(searchString, position) === position;
      };
    }
    
    if( !path.startsWith('/') ){
      path = '/' + path;
    }
    if( path.startsWith('/#/') ){
      path = path.substring(2);
    }
    return path;
  }
})();